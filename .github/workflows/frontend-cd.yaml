name: Frontend CD
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

env:
  NODE_VERSION: '18.x'

jobs:
  lint-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: "starter/frontend/package-lock.json"

      - name: Install, Run
        run: |
          npm ci
          npm run lint

  test-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: check-out repo
        uses: actions/checkout@v3

      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: "starter/frontend/package-lock.json"

      - name: Install, Run
        run: |
          npm ci
          npm run test

  build-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    needs:
      - lint-job
      - test-job

    steps:
      - name: check-out repo
        uses: actions/checkout@v3

      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: "starter/frontend/package-lock.json"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  
      - name: Build and push docker image
        working-directory: starterfrontend
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://a590e43555b6447099bb8d81eb852a47-1809689184.us-east-1.elb.amazonaws.com/movies --tag=frontend:${GITHUB_SHA} .
          docker tag frontend:${GITHUB_SHA} 628647790621.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
          docker push 628647790621.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
      
      - name: Deploy image into cluster
        working-directory: starter/frontend/k8s
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          kustomize edit set image frontend=628647790621.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
          kustomize build | kubectl apply -f -
